% Q2_ARTSCFILE_SENSOR   ARTS control file to generate sensor response matrices
%
%   The content is mainly controlled by a structure C, having the fields:
%     ANTENNA_FILE
%     BACKEND_FILE
%     LO
%     PART
%     SIDEBAND_FILE
%
%   The options for C.PART are 'antenna', 'mixer', 'backend', 'all' and
%   'total'. For all beside the last option, a compact version of the
%   response matrix for the different parts is generated. These compact
%   versions can expanded and combined by *q2_arts_sensor*.
%
%   The option 'total' generates a complete response matrix, but this option
%   is slow and should just be used for reference.
%
%   Remaining variables are simply read from files. These files shall be
%   placed in *workfolder* and be named as WSV.xml, e.g. f_grid.xml for
%   f_grid. 
%
%   This function is most simply used by *q2_arts_sensor_parts*.
%
% FORMAT cfile = q2_artscfile_sensor(C,workfolder[,cfilename])
%
% OUT   cfile        Full path to control file generated.
% IN    C            C structure, as described above.
%       workfolder   Folder where control file shall be placed
% OPT   cfilename    Name of actual file. Default is 'sensor.arts'. 

% 2015-05-29   Created by Patrick Eriksson.


function cfile = q2_artscfile_sensor(C,workfolder,cfilename)
%  
if nargin < 3, cfilename = 'sensor.arts'; end


%- Open cfile for writing
%
cfile = fullfile( workfolder, cfilename );
%
fid = fileopen( cfile, 'w' );
%
cu = onCleanup( @()fileclose( fid ) );
  
%
% Common part
%
fprintf( fid, '#\n# This control file has been generated by *%s*: %s\n#\n', ...
              mfilename, datestr(now,31) );
fprintf( fid, 'Arts2{\n' );
%
fprintf( fid, 'output_file_formatSetBinary\n' );
fprintf( fid, 'IndexSet( sensor_norm, 1 )\n' );
fprintf( fid, 'AtmosphereSet1D\n' );
fprintf( fid, 'IndexSet( stokes_dim, 1 )\n' );
fprintf( fid, 'ReadXML( mblock_dlos_grid, "%s" )\n', ...
                                 fullfile( workfolder, 'mblock_dlos_grid.xml' ) ); 
fprintf( fid, 'IndexSet( antenna_dim, 1 )\n' );


switch lower(C.PART)
  
  case 'antenna'
    %
    fprintf( fid, 'VectorSet( f_grid, [500e9] )\n' ); % value does not matter
    fprintf( fid, 'sensor_responseInit\n' );
    fprintf( fid, 'ReadXML( antenna_response, "%s" )\n', C.ANTENNA_FILE );
    fprintf( fid, 'ReadXML( antenna_dlos, "%s" )\n', ...
                                    fullfile( workfolder, 'antenna_dlos.xml' ) ); 
    fprintf( fid, 'sensor_responseAntenna\n' );
    fprintf( fid, 'WriteXML( in=sensor_response, filename="%s" )\n', ...
                       fullfile( workfolder, sprintf('sensor_response.xml' ) ) );
    
  case 'mixer'
    %
    fprintf( fid, 'ReadXML( f_grid, "%s" )\n', ...
                                          fullfile( workfolder, 'f_grid.xml' ) ); 
    fprintf( fid, 'sensor_responseInit\n' );
    fprintf( fid, 'ReadXML( sideband_response, "%s" )\n', C.SIDEBAND_FILE );
    fprintf( fid, 'NumericSet( lo, %.7e )\n', C.LO );
    fprintf( fid, 'sensor_responseMixer\n' );
    fprintf( fid, 'WriteXML( in=sensor_response, filename="%s" )\n', ...
                       fullfile( workfolder, sprintf('sensor_response.xml' ) ) );
    fprintf( fid, 'WriteXML( in=sensor_response_f, filename="%s" )\n', ...
                     fullfile( workfolder, sprintf('sensor_response_f.xml' ) ) );
    
  case 'backend'
    %
    fprintf( fid, 'ReadXML( f_grid, "%s" )\n', ...
                                          fullfile( workfolder, 'f_grid.xml' ) ); 
    fprintf( fid, 'sensor_responseInit\n' );
    fprintf( fid, 'ReadXML( f_backend, "%s" )\n', ...
                                       fullfile( workfolder, 'f_backend.xml' ) ); 
    fprintf( fid, 'ReadXML( backend_channel_response, "%s" )\n', ...
                                                                C.BACKEND_FILE );
    fprintf( fid, 'sensor_responseBackend\n' );
    fprintf( fid, 'WriteXML( in=sensor_response, filename="%s" )\n', ...
                       fullfile( workfolder, sprintf('sensor_response.xml' ) ) );

  case 'total'
    %
    fprintf( fid, 'ReadXML( f_grid, "%s" )\n', ...
                                          fullfile( workfolder, 'f_grid.xml' ) ); 
    fprintf( fid, 'ReadXML( antenna_response, "%s" )\n', C.ANTENNA_FILE );
    fprintf( fid, 'ReadXML( antenna_dlos, "%s" )\n', ...
                                    fullfile( workfolder, 'antenna_dlos.xml' ) ); 
      
    fprintf( fid, 'ReadXML( sideband_response, "%s" )\n', C.SIDEBAND_FILE );
    fprintf( fid, 'NumericSet( lo, %.7e )\n', C.LO );
    fprintf( fid, 'ReadXML( f_backend, "%s" )\n', ...
                                       fullfile( workfolder, 'f_backend.xml' ) ); 
    fprintf( fid, 'ReadXML( backend_channel_response, "%s" )\n', ...
                                                                C.BACKEND_FILE );
    %
    fprintf( fid, 'sensor_responseInit\n' );
    fprintf( fid, 'sensor_responseAntenna\n' );
    fprintf( fid, 'sensor_responseMixer\n' );
    fprintf( fid, 'sensor_responseBackend\n' );
    fprintf( fid, 'WriteXML( in=sensor_response, filename="%s" )\n', ...
                       fullfile( workfolder, sprintf('sensor_response.xml' ) ) );
 
 otherwise
  error( 'Unknown choice for C.PART (%s)', C.PART );
end


% End file
fprintf( fid, '}\n' );

